services:
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_db
      POSTGRES_DB_ORDERS: orders_db
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongo:
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./services/user-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=users_db
    depends_on:
      - postgres
    volumes:
      - ./services/user-service:/app

  product-service:
    build: ./services/product-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - MONGO_URI=mongodb://mongo:27017/products_db
    depends_on:
      - mongo
    volumes:
      - ./services/product-service:/app

  order-service:
    build: ./services/order-service
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=orders_db
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    volumes:
      - ./services/order-service:/app

  notification-service:
    build: ./services/notification-service
    ports:
      - "5004:5004"
    environment:
      - PORT=5004
      - RABBITMQ_URL=amqp://rabbitmq
      - REDIS_URL=redis://redis:6379
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./services/notification-service:/app

  api-gateway:
    build: ./api-gateway
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
    depends_on:
      - user-service
      - product-service
      - order-service
      - notification-service

volumes:
  postgres-data:
  mongo-data:
  redis-data:
